h1. This is a set of example code to explain how to use Kerberos with
the JAAS (Java Authentication and Authorization Service) API.

h1. Acknowledgements and Related Work

h2. http://thejavamonkey.blogspot.com/2008/04/clientserver-hello-world-in-kerberos.html

This is a great guide, including documentation, that I used as a
starting point. Java Monkey's code is composed of a client and a
server. The client and server communicate by the filesystem;
specifically, the client writes to a key file which the server reads.

However, I wanted to have the client and server communicate via a network, so 
that's the scenario that my code uses here.

h2. Sun official JAAS tutorial




h1. Prerequisites

    h2. Kerberos server and client tools

    h2. JDK

    h2. make

h1. Setup Kerberos Server Infrastructure

  h2. Choose realm name

  h2. Edit /etc/krb5.conf

  h2. Choose principals

  h2. Add principals using kadmin.local 

h1. Test Kerberos Server Infrastructure

  h2. test with kinit.

h1. Compile Java example code

Run 'make compile'

h1. Runtime configuration of Java example code

 h2. Generate keytab for service principal

 h2. Edit jaas.conf: set KerberizedServer.principal

 h2. Edit server.properties: (FIXME: use keytabs rather than password in file).

 h2. Edit client.properties: (FIXME: prompt for password when client starts rather than password in file).

h1. Test

Run 'make test' will start up the example server and run the client
against it. You may run the client against the same server afterwards
by doing 'make test_client'. You can kill an existing server process
by doing 'make killserver'.
